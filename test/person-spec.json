{
    "openapi": "3.0.0",
    "info": {
        "title": "Person CRUD API",
        "description": "CRUD operations for Person objects",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "paths": {
        "/persons": {
            "get": {
                "summary": "Get all persons",
                "operationId": "getPersons",
                "responses": {
                    "200": {
                        "description": "List of persons",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Person"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new person",
                "operationId": "createPerson",
                "requestBody": {
                    "description": "Person object to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/persons/{id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "description": "ID of the person to retrieve, update, or delete",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "get": {
                "summary": "Get a person by ID",
                "operationId": "getPersonById",
                "responses": {
                    "200": {
                        "description": "Person object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found"
                    }
                }
            },
            "put": {
                "summary": "Update a person by ID",
                "operationId": "updatePersonById",
                "requestBody": {
                    "description": "Person object to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated person",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete a person by ID",
                "operationId": "deletePersonById",
                "responses": {
                    "204": {
                        "description": "Person deleted"
                    },
                    "404": {
                        "description": "Person not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Person": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "age": {
                        "type": "integer"
                    },
                    "todos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "preferences": {
                        "type": "object"
                    }
                },
                "required": [
                    "name",
                    "age"
                ]
            }
        }
    }
}